import { PluggyConnect as PluggyConnectBase, } from 'pluggy-connect-sdk';
import React, { useCallback, useRef } from 'react';
import './version';
export const PluggyConnect = (props) => {
    // wrap props as ref, to avoid re-render when the actual object reference changes
    const propsRef = useRef(props);
    const pluggyConnectContainerRef = useCallback((containerElement) => {
        const { current: currentProps } = propsRef;
        const { innerRef, onLoadError } = currentProps;
        if (containerElement === null) {
            // container unmount
            innerRef === null || innerRef === void 0 ? void 0 : innerRef(null);
            return;
        }
        // container mounted -> init pluggyConnect instance
        const pluggyConnect = new PluggyConnectBase(currentProps);
        pluggyConnect
            .init(containerElement)
            .then(() => {
            // pluggyConnect rendered
            // call innerRef callback with current instance methods
            try {
                innerRef === null || innerRef === void 0 ? void 0 : innerRef({
                    show: pluggyConnect.show.bind(pluggyConnect),
                    hide: pluggyConnect.hide.bind(pluggyConnect),
                });
            }
            catch (error) {
                console.error('Unexpected error caught in <PluggyConnect/> when calling innerRef prop:', error);
            }
        })
            .catch((error) => {
            onLoadError === null || onLoadError === void 0 ? void 0 : onLoadError(error);
        });
    }, []);
    return React.createElement("div", { id: 'PluggyConnect', ref: pluggyConnectContainerRef });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3QtcGx1Z2d5LWNvbm5lY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcmVhY3QtcGx1Z2d5LWNvbm5lY3QudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFHTCxhQUFhLElBQUksaUJBQWlCLEdBRW5DLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxLQUFLLEVBQUUsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBRW5ELE9BQU8sV0FBVyxDQUFDO0FBb0JuQixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxLQUF5QixFQUFFLEVBQUU7SUFDekQsaUZBQWlGO0lBQ2pGLE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUUvQixNQUFNLHlCQUF5QixHQUFHLFdBQVcsQ0FDM0MsQ0FBQyxnQkFBdUMsRUFBRSxFQUFFO1FBQzFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLEdBQUcsUUFBUSxDQUFDO1FBQzNDLE1BQU0sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLEdBQUcsWUFBWSxDQUFDO1FBRS9DLElBQUksZ0JBQWdCLEtBQUssSUFBSSxFQUFFO1lBQzdCLG9CQUFvQjtZQUNwQixRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUcsSUFBSSxFQUFFO1lBQ2pCLE9BQU87U0FDUjtRQUVELG1EQUFtRDtRQUNuRCxNQUFNLGFBQWEsR0FBRyxJQUFJLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxDQUFDO1FBRTFELGFBQWE7YUFDVixJQUFJLENBQUMsZ0JBQWdCLENBQUM7YUFDdEIsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNULHlCQUF5QjtZQUN6Qix1REFBdUQ7WUFDdkQsSUFBSTtnQkFDRixRQUFRLGFBQVIsUUFBUSx1QkFBUixRQUFRLENBQUc7b0JBQ1QsSUFBSSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQztvQkFDNUMsSUFBSSxFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQztpQkFDN0MsRUFBRTthQUNKO1lBQUMsT0FBTyxLQUFLLEVBQUU7Z0JBQ2QsT0FBTyxDQUFDLEtBQUssQ0FDWCx5RUFBeUUsRUFDekUsS0FBSyxDQUNOLENBQUM7YUFDSDtRQUNILENBQUMsQ0FBQzthQUNELEtBQUssQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ2YsV0FBVyxhQUFYLFdBQVcsdUJBQVgsV0FBVyxDQUFHLEtBQWMsRUFBRTtRQUNoQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsRUFDRCxFQUFFLENBQ0gsQ0FBQztJQUVGLE9BQU8sNkJBQUssRUFBRSxFQUFFLGVBQWUsRUFBRSxHQUFHLEVBQUUseUJBQXlCLEdBQUksQ0FBQztBQUN0RSxDQUFDLENBQUMifQ==