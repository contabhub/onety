/**
 * Helper to transform user-provided props values, to our own
 * adapted props object.
 * This is necessary to avoid collision with Zoid component props.
 *
 * @param props
 */
export function adaptPluggyConnectProps(props) {
    const { onError, onSuccess, onOpen, onClose, onEvent, onHide } = props;
    // clone object as-is, to explicitly delete unwanted props later
    const adaptedPropsBase = Object.assign({}, props);
    // remove onXX props as some of them collide with Zoid props,
    // assign them to different keys instead
    delete adaptedPropsBase.onError;
    delete adaptedPropsBase.onSuccess;
    delete adaptedPropsBase.onOpen;
    delete adaptedPropsBase.onClose;
    delete adaptedPropsBase.onEvent;
    delete adaptedPropsBase.onHide;
    // build adapted props object,
    // starting from props without the unneeded ones,
    // adding the ones we need.
    return Object.assign(Object.assign({}, adaptedPropsBase), { onErrorProp: onError, onSuccessProp: onSuccess, onOpenProp: onOpen, onCloseProp: onClose, onEventProp: onEvent, onHideProp: onHide });
}
/**
 * Helper to transform adapted props object, back into user-provided props
 * values.
 * This is necessary to avoid collision with Zoid component props.
 *
 * @param adaptedProps
 */
export function restorePluggyConnectProps(adaptedProps) {
    const { onErrorProp, onSuccessProp, onOpenProp, onCloseProp, onEventProp, onHideProp, } = adaptedProps;
    // build original props object,
    // starting from props without the unneeded ones,
    // adding the ones we need.
    return Object.assign(Object.assign({}, adaptedProps), { onError: onErrorProp, onSuccess: onSuccessProp, onOpen: onOpenProp, onClose: onCloseProp, onEvent: onEventProp, onHide: onHideProp });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvcHJvcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0JBOzs7Ozs7R0FNRztBQUNILE1BQU0sVUFBVSx1QkFBdUIsQ0FDckMsS0FBaUM7SUFFakMsTUFBTSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBRXZFLGdFQUFnRTtJQUNoRSxNQUFNLGdCQUFnQixxQkFDakIsS0FBSyxDQUNULENBQUM7SUFDRiw2REFBNkQ7SUFDN0Qsd0NBQXdDO0lBQ3hDLE9BQU8sZ0JBQWdCLENBQUMsT0FBTyxDQUFDO0lBQ2hDLE9BQU8sZ0JBQWdCLENBQUMsU0FBUyxDQUFDO0lBQ2xDLE9BQU8sZ0JBQWdCLENBQUMsTUFBTSxDQUFDO0lBQy9CLE9BQU8sZ0JBQWdCLENBQUMsT0FBTyxDQUFDO0lBQ2hDLE9BQU8sZ0JBQWdCLENBQUMsT0FBTyxDQUFDO0lBQ2hDLE9BQU8sZ0JBQWdCLENBQUMsTUFBTSxDQUFDO0lBRS9CLDhCQUE4QjtJQUM5QixpREFBaUQ7SUFDakQsMkJBQTJCO0lBQzNCLHVDQUNLLGdCQUFnQixLQUNuQixXQUFXLEVBQUUsT0FBTyxFQUNwQixhQUFhLEVBQUUsU0FBUyxFQUN4QixVQUFVLEVBQUUsTUFBTSxFQUNsQixXQUFXLEVBQUUsT0FBTyxFQUNwQixXQUFXLEVBQUUsT0FBTyxFQUNwQixVQUFVLEVBQUUsTUFBTSxJQUNsQjtBQUNKLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUseUJBQXlCLENBQ3ZDLFlBQXVDO0lBRXZDLE1BQU0sRUFDSixXQUFXLEVBQ1gsYUFBYSxFQUNiLFVBQVUsRUFDVixXQUFXLEVBQ1gsV0FBVyxFQUNYLFVBQVUsR0FDWCxHQUFHLFlBQVksQ0FBQztJQUVqQiwrQkFBK0I7SUFDL0IsaURBQWlEO0lBQ2pELDJCQUEyQjtJQUMzQix1Q0FDSyxZQUFZLEtBQ2YsT0FBTyxFQUFFLFdBQVcsRUFDcEIsU0FBUyxFQUFFLGFBQWEsRUFDeEIsTUFBTSxFQUFFLFVBQVUsRUFDbEIsT0FBTyxFQUFFLFdBQVcsRUFDcEIsT0FBTyxFQUFFLFdBQVcsRUFDcEIsTUFBTSxFQUFFLFVBQVUsSUFDbEI7QUFDSixDQUFDIn0=